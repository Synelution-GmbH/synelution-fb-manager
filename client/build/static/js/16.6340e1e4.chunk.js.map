{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","pages/Login/index.jsx"],"names":["FormGroup","React","props","ref","classes","className","_props$row","row","other","_objectWithoutProperties","_extends","clsx","root","withStyles","display","flexDirection","flexWrap","name","useStyles","makeStyles","theme","margin","spacing","title","grid","height","card","minWidth","Login","useState","username","pwd","form","setForm","authentication","useAuth","handleChange","e","target","value","type","checked","handleLogin","a","preventDefault","login","password","console","log","Fragment","Helmet","lang","charset","content","Container","style","Grid","container","justify","alignItems","Card","CardContent","Box","m","Typography","variant","onSubmit","TextField","label","onChange","autoComplete","Button","color","size"],"mappings":"6UAyBIA,EAAyBC,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAaJ,EAAMK,IACnBA,OAAqB,IAAfD,GAAgCA,EACtCE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,QAErE,OAAoBD,gBAAoB,MAAOS,YAAS,CACtDL,UAAWM,YAAKP,EAAQQ,KAAMP,EAAWE,GAAOH,EAAQG,KACxDJ,IAAKA,GACJK,OA6BUK,cA1DK,CAElBD,KAAM,CACJE,QAAS,OACTC,cAAe,SACfC,SAAU,QAIZT,IAAK,CACHQ,cAAe,QAgDe,CAChCE,KAAM,gBADOJ,CAEZb,G,kBClDGkB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJ,QAAS,CACPS,OAAQD,EAAME,QAAQ,KAG1BC,MAAO,GAGPC,KAAM,CACJC,OAAQ,SAEVC,KAAM,CACJC,SAAU,aA2FCC,UAvFD,WAAO,IAAD,EACMC,mBAAS,CAAEC,SAAU,GAAIC,IAAK,KADpC,mBACXC,EADW,KACLC,EADK,KAEZC,EAAiBC,cAEjB/B,EAAUc,IAEVkB,EAAe,SAACC,GAAO,IACnBC,EAAWD,EAAXC,OACArB,EAAeqB,EAAfrB,KACFsB,EAAiB,aADAD,EAATE,KACsBF,EAAOG,QAAUH,EAAOC,MAE5DN,EAAQ,2BAAKD,GAAN,kBAAaf,EAAOsB,MAGvBG,EAAW,uCAAG,WAAOL,GAAP,SAAAM,EAAA,6DAClBN,EAAEO,iBADgB,kBAGVV,EAAeW,MAAM,CACzBf,SAAUE,EAAKF,SACfgB,SAAUd,EAAKD,MALD,sDAQhBgB,QAAQC,IAAR,MARgB,wDAAH,sDAYjB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,0BAAMC,KAAK,OACX,wCACA,0BAAMC,QAAQ,UACd,0BAAMnC,KAAK,cAAcoC,QAAQ,gBAEnC,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAE9B,OAAQ,UAC1B,kBAAC+B,EAAA,EAAD,CACEnD,UAAWD,EAAQoB,KACnBiC,WAAS,EACTC,QAAQ,SACRC,WAAW,UAEX,kBAACC,EAAA,EAAD,CAAMvD,UAAWD,EAAQsB,MACvB,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CAAY3D,UAAWD,EAAQmB,MAAO0C,QAAQ,MAA9C,UAIF,0BAAM5D,UAAWD,EAAQQ,KAAMsD,SAAU,SAAC7B,GAAD,OAAOK,EAAYL,KAC1D,kBAAC,EAAD,KACE,kBAAC8B,EAAA,EAAD,CACE3B,KAAK,OACLvB,KAAK,WACLmD,MAAM,WACN7B,MAAOP,EAAKF,SACZuC,SAAUjC,EACVkC,aAAa,cAGjB,kBAAC,EAAD,KACE,kBAACH,EAAA,EAAD,CACEC,MAAM,WACN5B,KAAK,WACLvB,KAAK,MACLsB,MAAOP,EAAKD,IACZuC,aAAa,mBACbD,SAAUjC,KAGd,kBAACmC,EAAA,EAAD,CACEN,QAAQ,YACRO,MAAM,UACNhC,KAAK,SACLnC,UAAU,MACVoE,KAAK,SALP","file":"static/js/16.6340e1e4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useAuth } from 'services/auth-provider';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  FormGroup,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  title: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  grid: {\r\n    height: '100vh',\r\n  },\r\n  card: {\r\n    minWidth: '350px',\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ username: '', pwd: '' });\r\n  const authentication = useAuth();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    const { target } = e;\r\n    const { name, type } = target;\r\n    const value = type === 'checkbox' ? target.checked : target.value;\r\n\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authentication.login({\r\n        username: form.username,\r\n        password: form.pwd,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <html lang=\"en\" />\r\n        <title>Login</title>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"description\" content=\"Login here\" />\r\n      </Helmet>\r\n      <Container style={{ height: '100vh' }}>\r\n        <Grid\r\n          className={classes.grid}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Box m={1}>\r\n                <Typography className={classes.title} variant=\"h4\">\r\n                  Login\r\n                </Typography>\r\n              </Box>\r\n              <form className={classes.root} onSubmit={(e) => handleLogin(e)}>\r\n                <FormGroup>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    value={form.username}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"username\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <TextField\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    value={form.pwd}\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"btn\"\r\n                  size=\"large\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}