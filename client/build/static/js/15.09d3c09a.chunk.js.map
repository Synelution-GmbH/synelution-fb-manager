{"version":3,"sources":["../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","pages/Login/index.jsx"],"names":["SvgIcon","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","focusable","undefined","role","muiName","withStyles","theme","userSelect","width","height","display","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","createSvgIcon","path","displayName","createElement","memo","forwardRef","makeStyles","stylesOrCreator","options","arguments","length","makeStylesWithoutDefault","defaultTheme","FormGroup","_props$row","row","flexDirection","flexWrap","useStyles","margin","spacing","title","grid","card","minWidth","Login","useState","username","pwd","form","setForm","authentication","useAuth","handleChange","e","target","value","type","checked","handleLogin","a","preventDefault","login","password","console","log","Fragment","Helmet","lang","charset","content","Container","style","Grid","container","justify","alignItems","Card","CardContent","Box","m","Typography","variant","onSubmit","TextField","label","onChange","autoComplete","Button","size"],"mappings":"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","file":"static/js/15.09d3c09a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useAuth } from 'services/auth-provider';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  FormGroup,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  title: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  grid: {\r\n    height: '100vh',\r\n  },\r\n  card: {\r\n    minWidth: '350px',\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ username: '', pwd: '' });\r\n  const authentication = useAuth();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    const { target } = e;\r\n    const { name, type } = target;\r\n    const value = type === 'checkbox' ? target.checked : target.value;\r\n\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authentication.login({\r\n        username: form.username,\r\n        password: form.pwd,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <html lang=\"en\" />\r\n        <title>Login</title>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"description\" content=\"Login here\" />\r\n      </Helmet>\r\n      <Container style={{ height: '100vh' }}>\r\n        <Grid\r\n          className={classes.grid}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Box m={1}>\r\n                <Typography className={classes.title} variant=\"h4\">\r\n                  Login\r\n                </Typography>\r\n              </Box>\r\n              <form className={classes.root} onSubmit={(e) => handleLogin(e)}>\r\n                <FormGroup>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    value={form.username}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"username\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <TextField\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    value={form.pwd}\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"btn\"\r\n                  size=\"large\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}