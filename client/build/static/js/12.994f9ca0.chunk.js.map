{"version":3,"sources":["ui/components/AssetUploader/Video.jsx","ui/components/Editor/CopyToClipboard.jsx","ui/components/Editor/helper.js","pages/Posts/MessageBox.jsx","services/client-link-api.js","ui/components/Editor/EmojiPicker.jsx","ui/components/Editor/index.jsx","ui/components/EditorClient/EditorIE.jsx","ui/components/EditorClient/index.jsx","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","pages/ClientView/ChangeImageBtn.jsx","pages/ClientView/FreigebenBtn.jsx","pages/ClientView/Post/Asset.jsx","pages/ClientView/Post/FacebookView.jsx","pages/ClientView/Post/InstagramView.jsx","pages/ClientView/Post/index.jsx","pages/ClientView/index.jsx"],"names":["useStyles","makeStyles","theme","video","width","height","objectFit","transition","button","position","left","top","transform","zIndex","opacity","visibility","color","videoContainer","fontSize","content","background","Video","containerStyles","props","ref","useRef","useState","playing","setPlaying","classes","useEffect","current","pause","play","className","style","loop","onClick","e","stopPropagation","icon","setToClipboard","blob","data","window","ClipboardItem","type","navigator","clipboard","write","getPngBlob","src","Promise","resolve","reject","c","document","createElement","ctx","getContext","img","Image","console","log","onload","drawImage","newName","replace","toBlob","CopyToClipboard","value","copied","setCopied","saveToClipboard","a","askClipboardPermissions","search","fetch","res","writeText","setTimeout","variant","size","padding","endIcon","marginLeft","permissions","query","name","allowWithoutGesture","state","Alert","elevation","MessageBox","text","toggle","severity","autoHideDuration","open","setOpen","handleClose","onClose","postClientLink","axios","post","then","getLinkById","id","get","avatar","overflow","picker","boxShadow","border","spacing","cursor","EmojiePicker","onSelect","Avatar","Box","Grow","in","transformOrigin","notFoundEmoji","title","set","emoji","native","EDITABLE","styled","Editable","root","backgroundColor","palette","primary","main","dark","flexGrow","toolbar","grey","Editor","onChange","children","serializedValue","editor","disabled","selection","focus","offset","path","anchor","Card","Grid","container","direction","alignItems","readOnly","spellCheck","placeholder","onBlur","Toolbar","p","justify","item","sm","insertText","Tooltip","placement","Typography","length","defaultProps","EditorIE","editorRef","onSave","editorProps","saveDelay","setValue","saveTimeout","TextareaAutosize","tag","target","clearTimeout","defaultValue","serialize","nodes","map","n","Node","string","join","deserialize","split","line","EditorClient","useMemo","withHistory","withReact","createEditor","serialized","DialogContentText","React","_extends","component","withStyles","marginBottom","buttonProgress","success","marginTop","ChangeImageButton","socket","useSocket","setText","loading","setLoading","Button","Dialog","DialogTitle","DialogContent","TextField","label","multiline","rows","fullWidth","margin","focused","autoFocus","DialogActions","emit","imageChanges","CircularProgress","FreigebenBtn","approved","QUERY","cache","useQueryCache","startIcon","invalidateQueries","Asset","asset","image","alt","card","borderRadius","fontFamily","maxWidth","cardContent","fontWeight","lineHeight","date","whiteSpace","wordBreak","unicodeBidi","FacebookView","client","editorComponent","dateFormatted","CardContent","wrap","profilePicture","paddingLeft","facebookName","iconContainer","profile","InstagramView","likes","Math","floor","random","slug","prefix","display","borderBottom","PostView","Post","dayjs","format","clientText","setClientText","correctionMode","setCorrectionMode","msg","setMsg","IE","ReactEditor","marginRight","clientCorrected","PostList","posts","Container","alignContent","_id","postProps","Fragment","key","ClientView","useParams","useQuery","isLoading","Loader"],"mappings":"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","file":"static/js/12.994f9ca0.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  video: {\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n    transition: '0.3s',\r\n  },\r\n  button: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: 2,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    transition: '0.3s',\r\n    color: '#fff',\r\n  },\r\n  videoContainer: {\r\n    zIndex: 99,\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    fontSize: 0,\r\n\r\n    '&:before': {\r\n      content: '\"\"',\r\n      left: 0,\r\n      top: 0,\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      background: '#000',\r\n      opacity: 0,\r\n      transition: '0.3s',\r\n    },\r\n    '&:hover .MuiIconButton-root': {\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n    },\r\n    '&:hover:before': {\r\n      opacity: 0.3,\r\n    },\r\n  },\r\n}));\r\nexport const Video = ({ containerStyles, ...props }) => {\r\n  const ref = useRef();\r\n  const [playing, setPlaying] = useState('init');\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || playing === 'init') return;\r\n    if (playing) ref.current.pause();\r\n    else ref.current.play();\r\n  }, [playing]);\r\n  return (\r\n    <div className={classes.videoContainer} style={containerStyles}>\r\n      <video ref={ref} className={classes.video} loop {...props}></video>\r\n      <IconButton\r\n        className={classes.button}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setPlaying(!playing);\r\n        }}\r\n      >\r\n        <AwesomeIcon icon={playing ? 'play' : 'pause'} />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { AwesomeIcon } from '../Icons/Icon';\r\nimport { askClipboardPermissions } from './helper';\r\n\r\nconst setToClipboard = (blob) => {\r\n  const data = [new window.ClipboardItem({ [blob.type]: blob })];\r\n  return navigator.clipboard.write(data);\r\n};\r\n\r\nconst getPngBlob = ({ src }) =>\r\n  new Promise((resolve, reject) => {\r\n    const c = document.createElement('canvas');\r\n    const ctx = c.getContext('2d');\r\n    const img = new Image();\r\n    console.log('asd');\r\n    img.onload = () => {\r\n      c.height = img.height;\r\n      c.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      const newName = src.replace(/\\.\\w{1,}$/g, '.png');\r\n      console.log(newName);\r\n      c.toBlob(\r\n        function (blob) {\r\n          resolve(blob);\r\n        },\r\n        'image/png',\r\n        1\r\n      );\r\n    };\r\n    img.src = src;\r\n  });\r\n\r\nexport const CopyToClipboard = ({ value, ...props }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const saveToClipboard = async (e) => {\r\n    e.stopPropagation();\r\n    await askClipboardPermissions();\r\n    try {\r\n      if (value.search(/\\.(gif|jpe?g|bmp)$/g) !== -1) {\r\n        const blob = await getPngBlob({ src: value });\r\n        await setToClipboard(blob);\r\n      } else if (value.search(/\\.(png)$/g) !== -1) {\r\n        const res = await fetch(value);\r\n        const blob = await res.blob();\r\n        await setToClipboard(blob);\r\n      } else {\r\n        await navigator.clipboard.writeText(value);\r\n      }\r\n      setCopied(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (copied)\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 1000);\r\n  }, [copied]);\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      color=\"primary\"\r\n      onClick={saveToClipboard}\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      style={{ padding: '8px 16px' }}\r\n      endIcon={<AwesomeIcon icon=\"copy\" style={{ marginLeft: '8px' }} />}\r\n    >\r\n      {copied ? 'Copied' : 'Copy'}\r\n    </Button>\r\n  );\r\n};\r\n","export const askClipboardPermissions = async () => {\r\n  try {\r\n    const { state } = await navigator.permissions.query({\r\n      name: 'clipboard-write',\r\n      allowWithoutGesture: false,\r\n    });\r\n    return state === 'granted';\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const MessageBox = ({\r\n  text,\r\n  toggle,\r\n  severity = 'error',\r\n  autoHideDuration = 30000,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!text) return;\r\n    setOpen(true);\r\n    // eslint-disable-next-line\r\n  }, [toggle]);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {text}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const postClientLink = (data) =>\r\n  axios.post(`/client-link`, data).then(({ data }) => data);\r\nexport const getLinkById = (id) =>\r\n  axios.get(`/client-link/${id}`).then(({ data }) => data);\r\n","import React, { useState } from 'react';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport data from 'emoji-mart/data/facebook.json';\r\nimport { NimblePicker } from 'emoji-mart';\r\nimport { Avatar, Box, Grow, makeStyles } from '@material-ui/core';\r\nimport { AwesomeIcon } from '../Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    overflow: 'visible',\r\n  },\r\n  picker: ({ open }) => ({\r\n    top: '100%',\r\n    position: 'absolute',\r\n    opacity: open ? 1 : 0,\r\n    visibility: open ? 'visible' : 'hidden',\r\n\r\n    '& .emoji-mart': {\r\n      boxShadow:\r\n        '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)!important',\r\n      border: 'none',\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .emoji-mart-anchor': {\r\n      cursor: 'pointer',\r\n    },\r\n  }),\r\n}));\r\n\r\nexport const EmojiePicker = ({ onSelect, className, ...props }) => {\r\n  const [open, setOpen] = useState();\r\n  const classes = useStyles({ open });\r\n\r\n  return (\r\n    <>\r\n      <Avatar\r\n        {...props}\r\n        className={classes.avatar + ' ' + className}\r\n        variant=\"rounded\"\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        <AwesomeIcon icon=\"smile\" />\r\n      </Avatar>\r\n      <Box className={classes.picker}>\r\n        <Grow in={open} style={{ transformOrigin: '0 0 0' }}>\r\n          <NimblePicker\r\n            notFoundEmoji=\"sob\"\r\n            title=\"Emojies\"\r\n            set=\"facebook\"\r\n            data={data}\r\n            onSelect={(emoji) => {\r\n              onSelect(emoji.native);\r\n              setOpen(false);\r\n            }}\r\n            // onClick={(emoji) => {\r\n            //   console.log(emoji);\r\n            //   onSelect(emoji.native);\r\n            //   setOpen(false);\r\n            // }}\r\n          />\r\n        </Grow>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  Grid,\r\n  makeStyles,\r\n  styled,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport { Editable, Slate } from 'slate-react';\r\n\r\nimport { EmojiePicker } from './EmojiPicker';\r\nimport { CopyToClipboard } from './CopyToClipboard';\r\n\r\nconst EDITABLE = styled(Editable)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: '100%',\r\n      overflow: 'visible',\r\n      '& .MuiAvatar-root.tool': {\r\n        // marginRight: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        transition: '0.3s',\r\n\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n      },\r\n\r\n      '& .emoji-picker': {\r\n        cursor: 'pointer',\r\n      },\r\n\r\n      '::spelling-error': {\r\n        color: 'red',\r\n      },\r\n\r\n      '& .editor': {\r\n        flexGrow: 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n      zIndex: 20,\r\n      backgroundColor: theme.palette.grey[100],\r\n      width: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nexport const Editor = ({\r\n  onChange,\r\n  toolbar,\r\n  children,\r\n  serializedValue,\r\n  value,\r\n  editor,\r\n  style = null,\r\n  disabled = false,\r\n  ...props\r\n}) => {\r\n  // const socket = useSocket();\r\n  // const editor = useMemo(() => withHistory(withReact(createEditor())), []);\r\n  const classes = useStyles();\r\n  const selection = useRef({\r\n    focus: { offset: 0, path: [0, 0] },\r\n    anchor: { offset: 0, path: [0, 0] },\r\n  });\r\n  // const renderLeaf = useCallback((props) => <Leaf {...props} />, [decorate]);\r\n\r\n  // const handleChange = (newValue) => {\r\n  //   const { operations, selection } = editor;\r\n  //   console.log(operations);\r\n  //   // console.log(editor.selection);\r\n  //   if (!operations[0].server) onChange({ operations, selection });\r\n  //   setValue(newValue);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   socket.on('editor change', ({ id: sId, operations, selection }) => {\r\n  //     if (id !== sId) return;\r\n\r\n  //     operations.forEach((operation) => {\r\n  //       console.log(operation);\r\n  //       editor.apply({ ...operation, server: true });\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <Card className={classes.root} style={style}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"stretch\"\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Slate editor={editor} value={value} onChange={onChange}>\r\n          <EDITABLE\r\n            {...props}\r\n            readOnly={disabled}\r\n            spellCheck={true}\r\n            className=\"editor\"\r\n            placeholder=\"Beginn typing !!\"\r\n            onBlur={() => (selection.current = editor.selection)}\r\n            // renderLeaf={renderLeaf}\r\n            // decorate={decorate}\r\n          />\r\n        </Slate>\r\n\r\n        {toolbar ? (\r\n          <Toolbar className={classes.toolbar} variant=\"dense\" p={1}>\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n              <Grid item sm={4}>\r\n                <Grid container justify=\"flex-start\">\r\n                  <EmojiePicker\r\n                    className=\"emoji-picker tool\"\r\n                    onSelect={(text) => {\r\n                      if (!editor.selection) {\r\n                        editor.selection = selection.current;\r\n                      }\r\n                      editor.insertText(text);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item sm={8}>\r\n                <Grid container justify=\"flex-end\">\r\n                  {children}\r\n                  <CopyToClipboard value={serializedValue} />\r\n                  <Tooltip title=\"character count\" placement=\"bottom\">\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      color=\"primary\"\r\n                      className=\"tool\"\r\n                      style={{ marginLeft: '8px' }}\r\n                    >\r\n                      <Typography>{serializedValue.length}</Typography>\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        ) : null}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nEditor.defaultProps = {\r\n  toolbar: true,\r\n  // onChange: () => {},\r\n  // decorate: () => {},\r\n};\r\n\r\n// const Leaf = ({ attributes, children, leaf }) => {\r\n//   return (\r\n//     <span\r\n//       {...attributes}\r\n//       style={{\r\n//         position: 'relative',\r\n//         backgroundColor: leaf.alphaColor,\r\n//       }}\r\n//     >\r\n//       {leaf.isCaret ? <Caret {...leaf} /> : null}\r\n//       {children}\r\n//     </span>\r\n//   );\r\n// };\r\n","import React, { useRef, useMemo, useState, useEffect } from 'react';\r\nimport { createEditor, Node } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport { withReact } from 'slate-react';\r\nimport { Editor } from '../Editor';\r\nimport { IE } from 'utils';\r\nimport { logDOM } from '@testing-library/react';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\n\r\nconst defaultValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text: '',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst serialize = (nodes) => {\r\n  return nodes.map((n) => Node.string(n)).join('\\n');\r\n};\r\n\r\nconst deserialize = (string) => {\r\n  // Return a value array of children derived by splitting the string.\r\n  return string.split('\\n').map((line) => `<p>${line}</p>`);\r\n};\r\n\r\nexport const EditorIE = ({\r\n  id,\r\n  content = null,\r\n  editorRef,\r\n  children,\r\n  onSave = () => {},\r\n  editorProps = {},\r\n  disabled = false,\r\n  saveDelay = 1000,\r\n}) => {\r\n  const [value, setValue] = useState(content);\r\n  const saveTimeout = useRef();\r\n\r\n  return (\r\n    <TextareaAutosize\r\n      className=\"ie-editor editor\"\r\n      {...editorProps}\r\n      ref={(tag) => (editorRef.current = tag)}\r\n      value={value}\r\n      disabled={disabled}\r\n      onChange={(e) => {\r\n        const { value } = e.target;\r\n        clearTimeout(saveTimeout.current);\r\n        saveTimeout.current = setTimeout(() => {\r\n          console.log('save');\r\n          console.log(value);\r\n          onSave({ serializedValue: value });\r\n        }, saveDelay);\r\n        setValue(value);\r\n      }}\r\n    ></TextareaAutosize>\r\n  );\r\n};\r\n","import React, { useRef, useMemo, useState, useEffect } from 'react';\r\nimport { createEditor, Node } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport { withReact } from 'slate-react';\r\nimport { Editor } from '../Editor';\r\nexport * from './EditorIE';\r\nconst defaultValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text: '',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst serialize = (nodes) => {\r\n  return nodes.map((n) => Node.string(n)).join('\\n');\r\n};\r\n\r\nconst deserialize = (string) => {\r\n  // Return a value array of children derived by splitting the string.\r\n  return string.split('\\n').map((line) => {\r\n    return {\r\n      children: [{ text: line }],\r\n    };\r\n  });\r\n};\r\n\r\nexport const EditorClient = ({\r\n  id,\r\n  content = null,\r\n  editorRef,\r\n  children,\r\n  onSave = () => {},\r\n  editorProps = {},\r\n  disabled = false,\r\n  saveDelay = 1000,\r\n}) => {\r\n  const [value, setValue] = useState(content ? deserialize(content) : defaultValue);\r\n  const saveTimeout = useRef();\r\n\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\r\n  useEffect(() => {\r\n    if (!editorRef) return;\r\n    editorRef.current = editor;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!content) return setValue(defaultValue);\r\n    setValue(deserialize(content));\r\n    // eslint-disable-next-line\r\n  }, [content]);\r\n\r\n  const serialized = serialize(value);\r\n  return (\r\n    <Editor\r\n      {...editorProps}\r\n      editor={editor}\r\n      value={value}\r\n      disabled={disabled}\r\n      serializedValue={serialized}\r\n      onChange={(value) => {\r\n        console.log(value);\r\n        clearTimeout(saveTimeout.current);\r\n        saveTimeout.current = setTimeout(() => {\r\n          console.log('save');\r\n          onSave({ value, serializedValue: serialize(value) });\r\n        }, saveDelay);\r\n        setValue(value);\r\n      }}\r\n    >\r\n      {children}\r\n    </Editor>\r\n  );\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSocket } from 'services/socket-provider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonProgress: {\r\n    color: theme.palette.success.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport const ChangeImageButton = ({ id, onSave = () => {}, ...props }) => {\r\n  const classes = useStyles();\r\n  const socket = useSocket();\r\n  const [open, setOpen] = useState(false);\r\n  const [text, setText] = useState();\r\n  const [loading, setLoading] = useState();\r\n\r\n  const handleSubmit = () => {\r\n    if (!text) return;\r\n    setLoading(true);\r\n    socket.emit('client change', { id, imageChanges: { text } }, (e) => {\r\n      setText('');\r\n      handleClose();\r\n      onSave();\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Button {...props} onClick={handleOpen}>\r\n        {props.children}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Bild Korrekturen</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Bitte beschreiben Sie Ihre Änderungswünsche zur Abbildung im unten\r\n            angezeigten Textfeld.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            label=\"Änderungswünsche\"\r\n            multiline\r\n            rows={3}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            focused\r\n            autoFocus\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Abbrechen</Button>\r\n          <Button\r\n            disabled={loading || !text}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Speichern\r\n            {loading ? (\r\n              <CircularProgress className={classes.buttonProgress} size={24} />\r\n            ) : null}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useQueryCache } from 'react-query';\r\nimport { useSocket } from 'services/socket-provider';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: ({ success }) =>\r\n    success\r\n      ? {\r\n          backgroundColor: theme.palette.success.main,\r\n          '&:hover': {\r\n            backgroundColor: theme.palette.success.dark,\r\n          },\r\n        }\r\n      : null,\r\n  buttonProgress: {\r\n    color: theme.palette.primary.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n    // background: theme.palette.action.disabled,\r\n  },\r\n}));\r\n\r\nexport const FreigebenBtn = ({ approved, id, QUERY }) => {\r\n  const cache = useQueryCache();\r\n  const socket = useSocket();\r\n  const [loading, setLoading] = useState();\r\n  const classes = useStyles({ success: approved });\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [approved]);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        startIcon={<AwesomeIcon icon=\"check-circle\" />}\r\n        disabled={loading}\r\n        onClick={() => {\r\n          if (approved) return;\r\n          setLoading(true);\r\n          console.log('emitting');\r\n          console.log(approved);\r\n          socket.emit(\r\n            'client change',\r\n            {\r\n              id,\r\n              approved: !approved,\r\n            },\r\n            (e) => {\r\n              // setLoading(false);\r\n              console.log('invalidate query');\r\n              cache.invalidateQueries(QUERY);\r\n            }\r\n          );\r\n        }}\r\n      >\r\n        {approved ? 'Freigegeben' : 'Freigeben'}\r\n        {loading ? (\r\n          <CircularProgress className={classes.buttonProgress} size={24} />\r\n        ) : null}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Video } from 'ui/components/AssetUploader/Video';\r\n\r\nexport const Asset = ({ asset, className }) => {\r\n  return asset && asset.path ? (\r\n    asset.image ? (\r\n      <img className={className} src={asset.path} alt=\"\" />\r\n    ) : (\r\n      <Video\r\n        className={className}\r\n        containerStyles={{ position: 'relative', marginBottom: '8px' }}\r\n        src={asset.path}\r\n      ></Video>\r\n    )\r\n  ) : null;\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { Asset } from './Asset';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    borderRadius: 'max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px',\r\n    margin: '0 8px 16px',\r\n    fontFamily: 'Helvetica',\r\n    boxShadow: '0 1px 2px rgba(0,0,0,0.2)',\r\n    fontSize: '16px',\r\n    '-webkitFontSmoothing': 'antialiased',\r\n    maxWidth: '500px',\r\n    position: 'relative',\r\n  },\r\n  cardContent: {\r\n    padding: '12px 16px 12px',\r\n  },\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: '.9375em',\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    lineHeight: 1.3333,\r\n  },\r\n  date: {\r\n    lineHeight: 1.2308,\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    fontSize: '.8125em',\r\n    color: '#65676b',\r\n  },\r\n  text: {\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    fontSize: '.9375em',\r\n    lineHeight: 1.34,\r\n    whiteSpace: 'pre-wrap',\r\n    wordBreak: 'break-word',\r\n    fontWeight: 400,\r\n    color: '#050505',\r\n    unicodeBidi: '-webkit-isolate',\r\n\r\n    '& .editor': {\r\n      margin: '-28px -4px -8px',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  asset: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport const FacebookView = ({\r\n  client,\r\n  editorComponent,\r\n  dateFormatted,\r\n  asset,\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container wrap=\"nowrap\">\r\n          <Avatar src={client.profilePicture} alt=\"\" />\r\n          <div style={{ flexGrow: 1, paddingLeft: '6px', marginBottom: '8px' }}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {client.facebookName}\r\n            </Typography>\r\n            <Typography className={classes.date} variant=\"caption\">\r\n              {dateFormatted} · <AwesomeIcon icon=\"globe-americas\" />\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </CardContent>\r\n      <div variant=\"div\" className={classes.text}>\r\n        {editorComponent}\r\n      </div>\r\n      <Asset className={classes.asset} asset={asset} />\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useMemo } from 'react';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { Asset } from './Asset';\r\n\r\nconst fontFamily =\r\n  '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    borderRadius: '3px',\r\n    margin: '0 8px 16px',\r\n    fontFamily,\r\n    boxShadow: 'none',\r\n    border: '1px solid #dbdbdb',\r\n    fontSize: '16px',\r\n    '-webkitFontSmoothing': 'antialiased',\r\n    maxWidth: '600px',\r\n  },\r\n  cardContent: {\r\n    padding: '16px 16px 16px',\r\n  },\r\n  iconContainer: {\r\n    padding: '8px 8px 8px',\r\n  },\r\n  icon: {\r\n    fontSize: '24px',\r\n    margin: '0 8px',\r\n  },\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    fontFamily,\r\n    lineHeight: '18px',\r\n  },\r\n  text: {\r\n    fontFamily,\r\n    fontSize: '14px',\r\n    lineHeight: '18px',\r\n    whiteSpace: 'pre-wrap',\r\n    wordBreak: 'break-word',\r\n    fontWeight: 400,\r\n    color: '#050505',\r\n    unicodeBidi: '-webkit-isolate',\r\n    '& .editor': {\r\n      margin: '-20px -4px -6px',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  asset: {\r\n    width: '100%',\r\n  },\r\n  profile: {\r\n    width: '32px',\r\n    height: '32px',\r\n  },\r\n}));\r\n\r\nexport const InstagramView = ({ client, editorComponent, asset, children }) => {\r\n  const classes = useStyles();\r\n  const likes = useMemo(() => Math.floor(Math.random() * 500) + 500, []);\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container wrap=\"nowrap\" alignItems=\"center\">\r\n          <Avatar className={classes.profile} src={client.profilePicture} alt=\"\" />\r\n          <div style={{ paddingLeft: '14px' }}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {client.slug}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </CardContent>\r\n      <Asset className={classes.asset} asset={asset} />\r\n      <CardContent className={classes.iconContainer}>\r\n        <Grid container>\r\n          <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"like\" />\r\n          <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"comment\" />\r\n          <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"share\" />\r\n          <Grid container style={{ flexGrow: 1, width: 'auto' }} justify=\"flex-end\">\r\n            <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"save\" />\r\n          </Grid>\r\n        </Grid>\r\n        <span\r\n          style={{\r\n            fontSize: '14px',\r\n            display: 'inline-block',\r\n            fontWeight: 600,\r\n            padding: '6px 8px 0',\r\n          }}\r\n        >\r\n          {likes} likes\r\n        </span>\r\n      </CardContent>\r\n      <div variant=\"div\" className={classes.text}>\r\n        {editorComponent}\r\n      </div>\r\n      <div style={{ borderBottom: '1px solid #efefef', marginBottom: '9px' }}></div>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CardContent, Grid, makeStyles, Button } from '@material-ui/core';\r\nimport dayjs from 'dayjs';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { EditorClient, EditorIE } from 'ui/components/EditorClient';\r\nimport { useSocket } from 'services/socket-provider';\r\nimport { ReactEditor } from 'slate-react';\r\nimport { MessageBox } from 'pages/Posts/MessageBox';\r\nimport { ChangeImageButton } from '../ChangeImageBtn';\r\nimport { FreigebenBtn } from '../FreigebenBtn';\r\nimport { FacebookView } from './FacebookView';\r\nimport { InstagramView } from './InstagramView';\r\nimport { useQueryCache } from 'react-query';\r\nimport { IE } from 'utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContent: {\r\n    padding: '6px 16px 16px!important',\r\n  },\r\n}));\r\n\r\nconst PostView = ({ type, ...props }) => {\r\n  return type === 'fb' ? (\r\n    <FacebookView {...props} type={type} />\r\n  ) : (\r\n    <InstagramView {...props} type={type} />\r\n  );\r\n};\r\n\r\nexport const Post = ({ QUERY, date, approved, id, content, type, ...props }) => {\r\n  const cache = useQueryCache();\r\n  const classes = useStyles({ type });\r\n  const editor = useRef();\r\n  const socket = useSocket();\r\n  const dateFormatted = useMemo(() => dayjs(date).format('D. MMMM'), [date]);\r\n  const [clientText, setClientText] = useState(null);\r\n  const [correctionMode, setCorrectionMode] = useState(false);\r\n  const [msg, setMsg] = useState({ toggle: false, text: '' });\r\n  console.log(clientText, correctionMode);\r\n  // focus Edtior\r\n  useEffect(() => {\r\n    if (!editor.current || !correctionMode) return;\r\n    if (!IE) ReactEditor.focus(editor.current);\r\n    else editor.current.focus();\r\n  }, [correctionMode]);\r\n\r\n  return (\r\n    <PostView\r\n      {...props}\r\n      type={type}\r\n      dateFormatted={dateFormatted}\r\n      editorComponent={\r\n        !IE ? (\r\n          <EditorClient\r\n            editorRef={editor}\r\n            disabled={!correctionMode}\r\n            content={content}\r\n            saveDelay={300}\r\n            editorProps={{\r\n              toolbar: false,\r\n              style: { boxShadow: 'none' },\r\n            }}\r\n            onSave={({ serializedValue }) => {\r\n              setClientText(serializedValue);\r\n              cache.invalidateQueries(QUERY);\r\n            }}\r\n            id={id}\r\n          />\r\n        ) : (\r\n          <EditorIE\r\n            editorRef={editor}\r\n            disabled={!correctionMode}\r\n            content={content}\r\n            saveDelay={300}\r\n            onSave={({ serializedValue }) => {\r\n              setClientText(serializedValue);\r\n              cache.invalidateQueries(QUERY);\r\n            }}\r\n            id={id}\r\n          />\r\n        )\r\n      }\r\n    >\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container justify=\"space-between\">\r\n          <FreigebenBtn approved={approved} id={id} QUERY={QUERY}></FreigebenBtn>\r\n          <Grid item>\r\n            <ChangeImageButton\r\n              id={id}\r\n              style={{ marginRight: '8px' }}\r\n              color=\"primary\"\r\n              onSave={() => {\r\n                setMsg({\r\n                  toggle: !msg.toggle,\r\n                  text: 'Bild Korrektur wurde gespeichert!',\r\n                  severity: 'success',\r\n                });\r\n              }}\r\n            >\r\n              Bild Korrekturen\r\n            </ChangeImageButton>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={\r\n                <AwesomeIcon\r\n                  style={{ fontSize: '100%' }}\r\n                  icon={correctionMode ? 'check-circle' : 'pen'}\r\n                />\r\n              }\r\n              disabled={correctionMode && !clientText}\r\n              onClick={() => {\r\n                if (correctionMode && clientText) {\r\n                  socket.emit(\r\n                    'client change',\r\n                    {\r\n                      id,\r\n                      content: clientText,\r\n                      clientCorrected: true,\r\n                    },\r\n                    () => {\r\n                      setMsg({\r\n                        toggle: !msg.toggle,\r\n                        text: 'Korrektur wurde gespeichert!',\r\n                        severity: 'success',\r\n                      });\r\n                    }\r\n                  );\r\n\r\n                  setClientText(null);\r\n                }\r\n                setCorrectionMode(!correctionMode);\r\n              }}\r\n            >\r\n              {correctionMode ? 'Speichern' : 'Korrigieren'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <MessageBox autoHideDuration={15000} {...msg} />\r\n    </PostView>\r\n  );\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'ui/components/Loader';\r\nimport { getLinkById } from 'services/client-link-api';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport { Post } from './Post';\r\n\r\nconst ClientView = () => {\r\n  const { id } = useParams();\r\n  const QUERY = useMemo(() => ['client-link', { id }], [id]);\r\n  const { isLoading, data } = useQuery(QUERY, () => getLinkById(id));\r\n\r\n  return (\r\n    <>\r\n      <Loader loading={isLoading} />\r\n      <Container style={{ padding: '1rem', marginBottom: '1rem' }}>\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n          <img\r\n            src=\"/assets/logo.svg\"\r\n            style={{ maxWidth: '300px', marginRight: '1rem' }}\r\n            alt=\"logo\"\r\n          />\r\n          {/* <Typography variant=\"h4\">Post Vorschau</Typography> */}\r\n        </Grid>\r\n      </Container>\r\n      {!data ? null : (\r\n        <PostList QUERY={QUERY} client={data.client} posts={data.posts} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostList = ({ posts, client, QUERY }) => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"flex-start\"\r\n      >\r\n        {posts.map(({ _id, ...postProps }) => (\r\n          <React.Fragment key={_id}>\r\n            <Post {...postProps} QUERY={QUERY} id={_id} client={client}></Post>\r\n            <br />\r\n          </React.Fragment>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientView;\r\n"],"sourceRoot":""}