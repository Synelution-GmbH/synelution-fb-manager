{"version":3,"sources":["ui/components/Editor/CopyToClipboard.jsx","ui/components/Editor/helper.js","pages/Posts/MessageBox.jsx","services/client-link-api.js","ui/components/Editor/EmojiPicker.jsx","ui/components/Editor/index.jsx","ui/components/EditorClient/EditorIE.jsx","ui/components/EditorClient/index.jsx","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","pages/ClientView/ChangeImageBtn.jsx","pages/ClientView/FreigebenBtn.jsx","pages/ClientView/Post/Asset.jsx","pages/ClientView/Post/FacebookView.jsx","pages/ClientView/Post/InstagramView.jsx","pages/ClientView/Post/index.jsx","pages/ClientView/index.jsx"],"names":["setToClipboard","blob","data","window","ClipboardItem","type","navigator","clipboard","write","getPngBlob","src","Promise","resolve","reject","c","document","createElement","ctx","getContext","img","Image","console","log","onload","height","width","drawImage","newName","replace","toBlob","CopyToClipboard","value","props","useState","copied","setCopied","saveToClipboard","e","a","stopPropagation","askClipboardPermissions","search","fetch","res","writeText","useEffect","setTimeout","color","onClick","variant","size","style","padding","endIcon","icon","marginLeft","permissions","query","name","allowWithoutGesture","state","Alert","elevation","MessageBox","text","toggle","severity","autoHideDuration","open","setOpen","handleClose","onClose","postClientLink","axios","post","then","getLinkById","id","get","useStyles","makeStyles","theme","avatar","overflow","picker","top","position","opacity","visibility","boxShadow","border","spacing","cursor","EmojiePicker","onSelect","className","classes","Avatar","Box","Grow","in","transformOrigin","notFoundEmoji","title","set","emoji","native","EDITABLE","styled","Editable","root","backgroundColor","palette","primary","main","transition","dark","flexGrow","toolbar","zIndex","grey","Editor","onChange","children","serializedValue","editor","disabled","selection","useRef","focus","offset","path","anchor","Card","Grid","container","direction","alignItems","readOnly","spellCheck","placeholder","onBlur","current","Toolbar","p","justify","item","sm","insertText","Tooltip","placement","Typography","length","defaultProps","EditorIE","content","editorRef","onSave","editorProps","saveDelay","setValue","saveTimeout","TextareaAutosize","ref","tag","target","clearTimeout","defaultValue","serialize","nodes","map","n","Node","string","join","deserialize","split","line","EditorClient","useMemo","withHistory","withReact","createEditor","serialized","DialogContentText","React","_extends","component","withStyles","marginBottom","buttonProgress","success","left","marginTop","ChangeImageButton","socket","useSocket","setText","loading","setLoading","Button","Dialog","DialogTitle","DialogContent","TextField","label","multiline","rows","fullWidth","margin","focused","autoFocus","DialogActions","emit","imageChanges","CircularProgress","button","FreigebenBtn","approved","QUERY","cache","useQueryCache","startIcon","invalidateQueries","Asset","asset","image","alt","card","borderRadius","fontFamily","fontSize","maxWidth","cardContent","fontWeight","lineHeight","date","whiteSpace","wordBreak","unicodeBidi","FacebookView","client","editorComponent","dateFormatted","CardContent","wrap","profilePicture","paddingLeft","facebookName","iconContainer","profile","InstagramView","likes","Math","floor","random","slug","prefix","display","borderBottom","PostView","Post","dayjs","format","clientText","setClientText","correctionMode","setCorrectionMode","msg","setMsg","IE","ReactEditor","marginRight","clientCorrected","PostList","posts","Container","alignContent","_id","postProps","Fragment","key","ClientView","useParams","useQuery","isLoading","Loader"],"mappings":"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","file":"static/js/13.f7dd141f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { AwesomeIcon } from '../Icons/Icon';\r\nimport { askClipboardPermissions } from './helper';\r\n\r\nconst setToClipboard = (blob) => {\r\n  const data = [new window.ClipboardItem({ [blob.type]: blob })];\r\n  return navigator.clipboard.write(data);\r\n};\r\n\r\nconst getPngBlob = ({ src }) =>\r\n  new Promise((resolve, reject) => {\r\n    const c = document.createElement('canvas');\r\n    const ctx = c.getContext('2d');\r\n    const img = new Image();\r\n    console.log('asd');\r\n    img.onload = () => {\r\n      c.height = img.height;\r\n      c.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      const newName = src.replace(/\\.\\w{1,}$/g, '.png');\r\n      console.log(newName);\r\n      c.toBlob(\r\n        function (blob) {\r\n          resolve(blob);\r\n        },\r\n        'image/png',\r\n        1\r\n      );\r\n    };\r\n    img.src = src;\r\n  });\r\n\r\nexport const CopyToClipboard = ({ value, ...props }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const saveToClipboard = async (e) => {\r\n    e.stopPropagation();\r\n    await askClipboardPermissions();\r\n    try {\r\n      if (value.search(/\\.(gif|jpe?g|bmp)$/g) !== -1) {\r\n        const blob = await getPngBlob({ src: value });\r\n        await setToClipboard(blob);\r\n      } else if (value.search(/\\.(png)$/g) !== -1) {\r\n        const res = await fetch(value);\r\n        const blob = await res.blob();\r\n        await setToClipboard(blob);\r\n      } else {\r\n        await navigator.clipboard.writeText(value);\r\n      }\r\n      setCopied(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (copied)\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 1000);\r\n  }, [copied]);\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      color=\"primary\"\r\n      onClick={saveToClipboard}\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      style={{ padding: '8px 16px' }}\r\n      endIcon={<AwesomeIcon icon=\"copy\" style={{ marginLeft: '8px' }} />}\r\n    >\r\n      {copied ? 'Copied' : 'Copy'}\r\n    </Button>\r\n  );\r\n};\r\n","export const askClipboardPermissions = async () => {\r\n  try {\r\n    const { state } = await navigator.permissions.query({\r\n      name: 'clipboard-write',\r\n      allowWithoutGesture: false,\r\n    });\r\n    return state === 'granted';\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const MessageBox = ({\r\n  text,\r\n  toggle,\r\n  severity = 'error',\r\n  autoHideDuration = 30000,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!text) return;\r\n    setOpen(true);\r\n    // eslint-disable-next-line\r\n  }, [toggle]);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {text}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const postClientLink = (data) =>\r\n  axios.post(`/client-link`, data).then(({ data }) => data);\r\nexport const getLinkById = (id) =>\r\n  axios.get(`/client-link/${id}`).then(({ data }) => data);\r\n","import React, { useState } from 'react';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport data from 'emoji-mart/data/facebook.json';\r\nimport { NimblePicker } from 'emoji-mart';\r\nimport { Avatar, Box, Grow, makeStyles } from '@material-ui/core';\r\nimport { AwesomeIcon } from '../Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    overflow: 'visible',\r\n  },\r\n  picker: ({ open }) => ({\r\n    top: '100%',\r\n    position: 'absolute',\r\n    opacity: open ? 1 : 0,\r\n    visibility: open ? 'visible' : 'hidden',\r\n\r\n    '& .emoji-mart': {\r\n      boxShadow:\r\n        '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)!important',\r\n      border: 'none',\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .emoji-mart-anchor': {\r\n      cursor: 'pointer',\r\n    },\r\n  }),\r\n}));\r\n\r\nexport const EmojiePicker = ({ onSelect, className, ...props }) => {\r\n  const [open, setOpen] = useState();\r\n  const classes = useStyles({ open });\r\n\r\n  return (\r\n    <>\r\n      <Avatar\r\n        {...props}\r\n        className={classes.avatar + ' ' + className}\r\n        variant=\"rounded\"\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        <AwesomeIcon icon=\"smile\" />\r\n      </Avatar>\r\n      <Box className={classes.picker}>\r\n        <Grow in={open} style={{ transformOrigin: '0 0 0' }}>\r\n          <NimblePicker\r\n            notFoundEmoji=\"sob\"\r\n            title=\"Emojies\"\r\n            set=\"facebook\"\r\n            data={data}\r\n            onSelect={(emoji) => {\r\n              onSelect(emoji.native);\r\n              setOpen(false);\r\n            }}\r\n            // onClick={(emoji) => {\r\n            //   console.log(emoji);\r\n            //   onSelect(emoji.native);\r\n            //   setOpen(false);\r\n            // }}\r\n          />\r\n        </Grow>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  Grid,\r\n  makeStyles,\r\n  styled,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport { Editable, Slate } from 'slate-react';\r\n\r\nimport { EmojiePicker } from './EmojiPicker';\r\nimport { CopyToClipboard } from './CopyToClipboard';\r\n\r\nconst EDITABLE = styled(Editable)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: '100%',\r\n      overflow: 'visible',\r\n      '& .MuiAvatar-root.tool': {\r\n        // marginRight: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        transition: '0.3s',\r\n\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n      },\r\n\r\n      '& .emoji-picker': {\r\n        cursor: 'pointer',\r\n      },\r\n\r\n      '::spelling-error': {\r\n        color: 'red',\r\n      },\r\n\r\n      '& .editor': {\r\n        flexGrow: 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n      zIndex: 20,\r\n      backgroundColor: theme.palette.grey[100],\r\n      width: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nexport const Editor = ({\r\n  onChange,\r\n  toolbar,\r\n  children,\r\n  serializedValue,\r\n  value,\r\n  editor,\r\n  style = null,\r\n  disabled = false,\r\n  ...props\r\n}) => {\r\n  // const socket = useSocket();\r\n  // const editor = useMemo(() => withHistory(withReact(createEditor())), []);\r\n  const classes = useStyles();\r\n  const selection = useRef({\r\n    focus: { offset: 0, path: [0, 0] },\r\n    anchor: { offset: 0, path: [0, 0] },\r\n  });\r\n  // const renderLeaf = useCallback((props) => <Leaf {...props} />, [decorate]);\r\n\r\n  // const handleChange = (newValue) => {\r\n  //   const { operations, selection } = editor;\r\n  //   console.log(operations);\r\n  //   // console.log(editor.selection);\r\n  //   if (!operations[0].server) onChange({ operations, selection });\r\n  //   setValue(newValue);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   socket.on('editor change', ({ id: sId, operations, selection }) => {\r\n  //     if (id !== sId) return;\r\n\r\n  //     operations.forEach((operation) => {\r\n  //       console.log(operation);\r\n  //       editor.apply({ ...operation, server: true });\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <Card className={classes.root} style={style}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"stretch\"\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Slate editor={editor} value={value} onChange={onChange}>\r\n          <EDITABLE\r\n            {...props}\r\n            readOnly={disabled}\r\n            spellCheck={true}\r\n            className=\"editor\"\r\n            placeholder=\"Beginn typing !!\"\r\n            onBlur={() => (selection.current = editor.selection)}\r\n            // renderLeaf={renderLeaf}\r\n            // decorate={decorate}\r\n          />\r\n        </Slate>\r\n\r\n        {toolbar ? (\r\n          <Toolbar className={classes.toolbar} variant=\"dense\" p={1}>\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n              <Grid item sm={4}>\r\n                <Grid container justify=\"flex-start\">\r\n                  <EmojiePicker\r\n                    className=\"emoji-picker tool\"\r\n                    onSelect={(text) => {\r\n                      if (!editor.selection) {\r\n                        editor.selection = selection.current;\r\n                      }\r\n                      editor.insertText(text);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item sm={8}>\r\n                <Grid container justify=\"flex-end\">\r\n                  {children}\r\n                  <CopyToClipboard value={serializedValue} />\r\n                  <Tooltip title=\"character count\" placement=\"bottom\">\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      color=\"primary\"\r\n                      className=\"tool\"\r\n                      style={{ marginLeft: '8px' }}\r\n                    >\r\n                      <Typography>{serializedValue.length}</Typography>\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        ) : null}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nEditor.defaultProps = {\r\n  toolbar: true,\r\n  // onChange: () => {},\r\n  // decorate: () => {},\r\n};\r\n\r\n// const Leaf = ({ attributes, children, leaf }) => {\r\n//   return (\r\n//     <span\r\n//       {...attributes}\r\n//       style={{\r\n//         position: 'relative',\r\n//         backgroundColor: leaf.alphaColor,\r\n//       }}\r\n//     >\r\n//       {leaf.isCaret ? <Caret {...leaf} /> : null}\r\n//       {children}\r\n//     </span>\r\n//   );\r\n// };\r\n","import React, { useRef, useMemo, useState, useEffect } from 'react';\r\nimport { createEditor, Node } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport { withReact } from 'slate-react';\r\nimport { Editor } from '../Editor';\r\nimport { IE } from 'utils';\r\nimport { logDOM } from '@testing-library/react';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\n\r\nconst defaultValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text: '',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst serialize = (nodes) => {\r\n  return nodes.map((n) => Node.string(n)).join('\\n');\r\n};\r\n\r\nconst deserialize = (string) => {\r\n  // Return a value array of children derived by splitting the string.\r\n  return string.split('\\n').map((line) => `<p>${line}</p>`);\r\n};\r\n\r\nexport const EditorIE = ({\r\n  id,\r\n  content = null,\r\n  editorRef,\r\n  children,\r\n  onSave = () => {},\r\n  editorProps = {},\r\n  disabled = false,\r\n  saveDelay = 1000,\r\n}) => {\r\n  const [value, setValue] = useState(content);\r\n  const saveTimeout = useRef();\r\n\r\n  return (\r\n    <TextareaAutosize\r\n      className=\"ie-editor editor\"\r\n      {...editorProps}\r\n      ref={(tag) => (editorRef.current = tag)}\r\n      value={value}\r\n      disabled={disabled}\r\n      onChange={(e) => {\r\n        const { value } = e.target;\r\n        clearTimeout(saveTimeout.current);\r\n        saveTimeout.current = setTimeout(() => {\r\n          console.log('save');\r\n          console.log(value);\r\n          onSave({ serializedValue: value });\r\n        }, saveDelay);\r\n        setValue(value);\r\n      }}\r\n    ></TextareaAutosize>\r\n  );\r\n};\r\n","import React, { useRef, useMemo, useState, useEffect } from 'react';\r\nimport { createEditor, Node } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport { withReact } from 'slate-react';\r\nimport { Editor } from '../Editor';\r\nexport * from './EditorIE';\r\nconst defaultValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text: '',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst serialize = (nodes) => {\r\n  return nodes.map((n) => Node.string(n)).join('\\n');\r\n};\r\n\r\nconst deserialize = (string) => {\r\n  // Return a value array of children derived by splitting the string.\r\n  return string.split('\\n').map((line) => {\r\n    return {\r\n      children: [{ text: line }],\r\n    };\r\n  });\r\n};\r\n\r\nexport const EditorClient = ({\r\n  id,\r\n  content = null,\r\n  editorRef,\r\n  children,\r\n  onSave = () => {},\r\n  editorProps = {},\r\n  disabled = false,\r\n  saveDelay = 1000,\r\n}) => {\r\n  const [value, setValue] = useState(content ? deserialize(content) : defaultValue);\r\n  const saveTimeout = useRef();\r\n\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\r\n  useEffect(() => {\r\n    if (!editorRef) return;\r\n    editorRef.current = editor;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!content) return setValue(defaultValue);\r\n    setValue(deserialize(content));\r\n    // eslint-disable-next-line\r\n  }, [content]);\r\n\r\n  const serialized = serialize(value);\r\n  return (\r\n    <Editor\r\n      {...editorProps}\r\n      editor={editor}\r\n      value={value}\r\n      disabled={disabled}\r\n      serializedValue={serialized}\r\n      onChange={(value) => {\r\n        console.log(value);\r\n        clearTimeout(saveTimeout.current);\r\n        saveTimeout.current = setTimeout(() => {\r\n          console.log('save');\r\n          onSave({ value, serializedValue: serialize(value) });\r\n        }, saveDelay);\r\n        setValue(value);\r\n      }}\r\n    >\r\n      {children}\r\n    </Editor>\r\n  );\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSocket } from 'services/socket-provider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonProgress: {\r\n    color: theme.palette.success.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport const ChangeImageButton = ({ id, onSave = () => {}, ...props }) => {\r\n  const classes = useStyles();\r\n  const socket = useSocket();\r\n  const [open, setOpen] = useState(false);\r\n  const [text, setText] = useState();\r\n  const [loading, setLoading] = useState();\r\n\r\n  const handleSubmit = () => {\r\n    if (!text) return;\r\n    setLoading(true);\r\n    socket.emit('client change', { id, imageChanges: { text } }, (e) => {\r\n      setText('');\r\n      handleClose();\r\n      onSave();\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Button {...props} onClick={handleOpen}>\r\n        {props.children}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Bild Korrekturen</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Bitte beschreiben Sie Ihre Änderungswünsche zur Abbildung im unten\r\n            angezeigten Textfeld.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            label=\"Änderungswünsche\"\r\n            multiline\r\n            rows={3}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            focused\r\n            autoFocus\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Abbrechen</Button>\r\n          <Button\r\n            disabled={loading || !text}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Speichern\r\n            {loading ? (\r\n              <CircularProgress className={classes.buttonProgress} size={24} />\r\n            ) : null}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useQueryCache } from 'react-query';\r\nimport { useSocket } from 'services/socket-provider';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: ({ success }) =>\r\n    success\r\n      ? {\r\n          backgroundColor: theme.palette.success.main,\r\n          '&:hover': {\r\n            backgroundColor: theme.palette.success.dark,\r\n          },\r\n        }\r\n      : null,\r\n  buttonProgress: {\r\n    color: theme.palette.primary.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n    // background: theme.palette.action.disabled,\r\n  },\r\n}));\r\n\r\nexport const FreigebenBtn = ({ approved, id, QUERY }) => {\r\n  const cache = useQueryCache();\r\n  const socket = useSocket();\r\n  const [loading, setLoading] = useState();\r\n  const classes = useStyles({ success: approved });\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [approved]);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        startIcon={<AwesomeIcon icon=\"check-circle\" />}\r\n        disabled={loading}\r\n        onClick={() => {\r\n          setLoading(true);\r\n          console.log('emitting');\r\n          console.log(approved);\r\n          socket.emit(\r\n            'client change',\r\n            {\r\n              id,\r\n              approved: !approved,\r\n            },\r\n            (e) => {\r\n              // setLoading(false);\r\n              console.log('invalidate query');\r\n              cache.invalidateQueries(QUERY);\r\n            }\r\n          );\r\n        }}\r\n      >\r\n        {approved ? 'Freigegeben' : 'Freigeben'}\r\n        {loading ? (\r\n          <CircularProgress className={classes.buttonProgress} size={24} />\r\n        ) : null}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Asset = ({ asset, className }) => {\r\n  return asset && asset.path ? (\r\n    asset.image ? (\r\n      <img className={className} src={asset.path} alt=\"\" />\r\n    ) : (\r\n      <video className={className} src={asset.path}></video>\r\n    )\r\n  ) : null;\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { Asset } from './Asset';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    borderRadius: 'max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px',\r\n    margin: '0 8px 16px',\r\n    fontFamily: 'Helvetica',\r\n    boxShadow: '0 1px 2px rgba(0,0,0,0.2)',\r\n    fontSize: '16px',\r\n    '-webkitFontSmoothing': 'antialiased',\r\n    maxWidth: '500px',\r\n  },\r\n  cardContent: {\r\n    padding: '12px 16px 12px',\r\n  },\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: '.9375em',\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    lineHeight: 1.3333,\r\n  },\r\n  date: {\r\n    lineHeight: 1.2308,\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    fontSize: '.8125em',\r\n    color: '#65676b',\r\n  },\r\n  text: {\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    fontSize: '.9375em',\r\n    lineHeight: 1.34,\r\n    whiteSpace: 'pre-wrap',\r\n    wordBreak: 'break-word',\r\n    fontWeight: 400,\r\n    color: '#050505',\r\n    unicodeBidi: '-webkit-isolate',\r\n\r\n    '& .editor': {\r\n      margin: '-28px -4px -8px',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  asset: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport const FacebookView = ({\r\n  client,\r\n  editorComponent,\r\n  dateFormatted,\r\n  asset,\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container wrap=\"nowrap\">\r\n          <Avatar src={client.profilePicture} alt=\"\" />\r\n          <div style={{ flexGrow: 1, paddingLeft: '6px', marginBottom: '8px' }}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {client.facebookName}\r\n            </Typography>\r\n            <Typography className={classes.date} variant=\"caption\">\r\n              {dateFormatted} · <AwesomeIcon icon=\"globe-americas\" />\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </CardContent>\r\n      <div variant=\"div\" className={classes.text}>\r\n        {editorComponent}\r\n      </div>\r\n      <Asset className={classes.asset} asset={asset} />\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useMemo } from 'react';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { Asset } from './Asset';\r\n\r\nconst fontFamily =\r\n  '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    borderRadius: '3px',\r\n    margin: '0 8px 16px',\r\n    fontFamily,\r\n    boxShadow: 'none',\r\n    border: '1px solid #dbdbdb',\r\n    fontSize: '16px',\r\n    '-webkitFontSmoothing': 'antialiased',\r\n    maxWidth: '600px',\r\n  },\r\n  cardContent: {\r\n    padding: '16px 16px 16px',\r\n  },\r\n  iconContainer: {\r\n    padding: '8px 8px 8px',\r\n  },\r\n  icon: {\r\n    fontSize: '24px',\r\n    margin: '0 8px',\r\n  },\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    fontFamily,\r\n    lineHeight: '18px',\r\n  },\r\n  text: {\r\n    fontFamily,\r\n    fontSize: '14px',\r\n    lineHeight: '18px',\r\n    whiteSpace: 'pre-wrap',\r\n    wordBreak: 'break-word',\r\n    fontWeight: 400,\r\n    color: '#050505',\r\n    unicodeBidi: '-webkit-isolate',\r\n    '& .editor': {\r\n      margin: '-20px -4px -6px',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  asset: {\r\n    width: '100%',\r\n  },\r\n  profile: {\r\n    width: '32px',\r\n    height: '32px',\r\n  },\r\n}));\r\n\r\nexport const InstagramView = ({ client, editorComponent, asset, children }) => {\r\n  const classes = useStyles();\r\n  const likes = useMemo(() => Math.floor(Math.random() * 500) + 500, []);\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container wrap=\"nowrap\" alignItems=\"center\">\r\n          <Avatar className={classes.profile} src={client.profilePicture} alt=\"\" />\r\n          <div style={{ paddingLeft: '14px' }}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {client.slug}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </CardContent>\r\n      <Asset className={classes.asset} asset={asset} />\r\n      <CardContent className={classes.iconContainer}>\r\n        <Grid container>\r\n          <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"like\" />\r\n          <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"comment\" />\r\n          <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"share\" />\r\n          <Grid container style={{ flexGrow: 1, width: 'auto' }} justify=\"flex-end\">\r\n            <AwesomeIcon className={classes.icon} prefix=\"ig\" icon=\"save\" />\r\n          </Grid>\r\n        </Grid>\r\n        <span\r\n          style={{\r\n            fontSize: '14px',\r\n            display: 'inline-block',\r\n            fontWeight: 600,\r\n            padding: '6px 8px 0',\r\n          }}\r\n        >\r\n          {likes} likes\r\n        </span>\r\n      </CardContent>\r\n      <div variant=\"div\" className={classes.text}>\r\n        {editorComponent}\r\n      </div>\r\n      <div style={{ borderBottom: '1px solid #efefef', marginBottom: '9px' }}></div>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CardContent, Grid, makeStyles, Button } from '@material-ui/core';\r\nimport dayjs from 'dayjs';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { EditorClient, EditorIE } from 'ui/components/EditorClient';\r\nimport { useSocket } from 'services/socket-provider';\r\nimport { ReactEditor } from 'slate-react';\r\nimport { MessageBox } from 'pages/Posts/MessageBox';\r\nimport { ChangeImageButton } from '../ChangeImageBtn';\r\nimport { FreigebenBtn } from '../FreigebenBtn';\r\nimport { FacebookView } from './FacebookView';\r\nimport { InstagramView } from './InstagramView';\r\nimport { useQueryCache } from 'react-query';\r\nimport { IE } from 'utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContent: {\r\n    padding: '6px 16px 16px!important',\r\n  },\r\n}));\r\n\r\nconst PostView = ({ type, ...props }) => {\r\n  return type === 'fb' ? (\r\n    <FacebookView {...props} type={type} />\r\n  ) : (\r\n    <InstagramView {...props} type={type} />\r\n  );\r\n};\r\n\r\nexport const Post = ({ QUERY, date, approved, id, content, type, ...props }) => {\r\n  const cache = useQueryCache();\r\n  const classes = useStyles({ type });\r\n  const editor = useRef();\r\n  const socket = useSocket();\r\n  const dateFormatted = useMemo(() => dayjs(date).format('D. MMMM'), [date]);\r\n  const [clientText, setClientText] = useState(null);\r\n  const [correctionMode, setCorrectionMode] = useState(false);\r\n  const [msg, setMsg] = useState({ toggle: false, text: '' });\r\n  console.log(clientText, correctionMode);\r\n  // focus Edtior\r\n  useEffect(() => {\r\n    if (!editor.current || !correctionMode) return;\r\n    if (!IE) ReactEditor.focus(editor.current);\r\n    else editor.current.focus();\r\n  }, [correctionMode]);\r\n\r\n  return (\r\n    <PostView\r\n      {...props}\r\n      type={type}\r\n      dateFormatted={dateFormatted}\r\n      editorComponent={\r\n        !IE ? (\r\n          <EditorClient\r\n            editorRef={editor}\r\n            disabled={!correctionMode}\r\n            content={content}\r\n            saveDelay={300}\r\n            editorProps={{\r\n              toolbar: false,\r\n              style: { boxShadow: 'none' },\r\n            }}\r\n            onSave={({ serializedValue }) => {\r\n              setClientText(serializedValue);\r\n              cache.invalidateQueries(QUERY);\r\n            }}\r\n            id={id}\r\n          />\r\n        ) : (\r\n          <EditorIE\r\n            editorRef={editor}\r\n            disabled={!correctionMode}\r\n            content={content}\r\n            saveDelay={300}\r\n            onSave={({ serializedValue }) => {\r\n              setClientText(serializedValue);\r\n              cache.invalidateQueries(QUERY);\r\n            }}\r\n            id={id}\r\n          />\r\n        )\r\n      }\r\n    >\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container justify=\"space-between\">\r\n          <FreigebenBtn approved={approved} id={id} QUERY={QUERY}></FreigebenBtn>\r\n          <Grid item>\r\n            <ChangeImageButton\r\n              id={id}\r\n              style={{ marginRight: '8px' }}\r\n              color=\"primary\"\r\n              onSave={() => {\r\n                setMsg({\r\n                  toggle: !msg.toggle,\r\n                  text: 'Bild Korrektur wurde gespeichert!',\r\n                  severity: 'success',\r\n                });\r\n              }}\r\n            >\r\n              Bild Korrekturen\r\n            </ChangeImageButton>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={\r\n                <AwesomeIcon\r\n                  style={{ fontSize: '100%' }}\r\n                  icon={correctionMode ? 'check-circle' : 'pen'}\r\n                />\r\n              }\r\n              disabled={correctionMode && !clientText}\r\n              onClick={() => {\r\n                if (correctionMode && clientText) {\r\n                  socket.emit(\r\n                    'client change',\r\n                    {\r\n                      id,\r\n                      content: clientText,\r\n                      clientCorrected: true,\r\n                    },\r\n                    () => {\r\n                      setMsg({\r\n                        toggle: !msg.toggle,\r\n                        text: 'Korrektur wurde gespeichert!',\r\n                        severity: 'success',\r\n                      });\r\n                    }\r\n                  );\r\n\r\n                  setClientText(null);\r\n                }\r\n                setCorrectionMode(!correctionMode);\r\n              }}\r\n            >\r\n              {correctionMode ? 'Speichern' : 'Korrigieren'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <MessageBox autoHideDuration={15000} {...msg} />\r\n    </PostView>\r\n  );\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'ui/components/Loader';\r\nimport { getLinkById } from 'services/client-link-api';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport { Post } from './Post';\r\n\r\nconst ClientView = () => {\r\n  const { id } = useParams();\r\n  const QUERY = useMemo(() => ['client-link', { id }], [id]);\r\n  const { isLoading, data } = useQuery(QUERY, () => getLinkById(id));\r\n\r\n  return (\r\n    <>\r\n      <Loader loading={isLoading} />\r\n      <Container style={{ padding: '1rem', marginBottom: '1rem' }}>\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n          <img\r\n            src=\"/assets/logo.svg\"\r\n            style={{ maxWidth: '300px', marginRight: '1rem' }}\r\n            alt=\"logo\"\r\n          />\r\n          {/* <Typography variant=\"h4\">Post Vorschau</Typography> */}\r\n        </Grid>\r\n      </Container>\r\n      {!data ? null : (\r\n        <PostList QUERY={QUERY} client={data.client} posts={data.posts} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostList = ({ posts, client, QUERY }) => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"flex-start\"\r\n      >\r\n        {posts.map(({ _id, ...postProps }) => (\r\n          <React.Fragment key={_id}>\r\n            <Post {...postProps} QUERY={QUERY} id={_id} client={client}></Post>\r\n            <br />\r\n          </React.Fragment>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientView;\r\n"],"sourceRoot":""}