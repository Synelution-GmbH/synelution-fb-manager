{"version":3,"sources":["ui/components/Editor/CopyToClipboard.jsx","ui/components/Editor/helper.js","pages/Posts/MessageBox.jsx","services/client-link-api.js","ui/components/Editor/EmojiPicker.jsx","ui/components/Editor/index.jsx","ui/components/EditorClient/index.jsx","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","pages/ClientView/ChangeImageBtn.jsx","pages/ClientView/FreigebenBtn.jsx","pages/ClientView/FacebookPost/index.js","pages/ClientView/index.jsx"],"names":["CopyToClipboard","value","props","useState","copied","setCopied","saveToClipboard","e","a","stopPropagation","askClipboardPermissions","navigator","clipboard","writeText","console","log","useEffect","setTimeout","color","onClick","variant","size","style","padding","endIcon","icon","marginLeft","permissions","query","name","state","Alert","elevation","MessageBox","text","toggle","severity","autoHideDuration","open","setOpen","handleClose","onClose","postClientLink","data","axios","post","then","getLinkById","id","get","useStyles","makeStyles","theme","avatar","overflow","picker","top","position","opacity","visibility","boxShadow","border","spacing","cursor","EmojiePicker","onSelect","className","classes","Avatar","Box","Grow","in","transformOrigin","notFoundEmoji","title","set","emoji","native","EDITABLE","styled","Editable","root","height","backgroundColor","palette","primary","main","transition","dark","flexGrow","toolbar","zIndex","grey","width","Editor","onChange","children","serializedValue","editor","disabled","selection","useRef","focus","offset","path","anchor","Card","Grid","container","direction","alignItems","readOnly","spellCheck","placeholder","onBlur","current","Toolbar","p","justify","item","sm","insertText","Tooltip","placement","Typography","length","defaultProps","defaultValue","type","serialize","nodes","map","n","Node","string","join","deserialize","split","line","EditorClient","content","editorRef","onSave","editorProps","saveDelay","setValue","saveTimeout","useMemo","withHistory","withReact","createEditor","serialized","clearTimeout","DialogContentText","React","ref","_extends","component","withStyles","marginBottom","buttonProgress","success","left","marginTop","ChangeImageButton","socket","useSocket","setText","loading","setLoading","Button","Dialog","DialogTitle","DialogContent","TextField","target","label","multiline","rows","fullWidth","margin","focused","autoFocus","DialogActions","emit","imageChanges","CircularProgress","button","FreigebenBtn","approved","QUERY","cache","useQueryCache","startIcon","invalidateQueries","FB_CARD","borderRadius","fontFamily","fontSize","maxWidth","FB_CARD_CONTENT","CardContent","fontWeight","lineHeight","date","whiteSpace","wordBreak","unicodeBidi","asset","FacebookPost","client","dateFormatted","dayjs","format","clientText","setClientText","correctionMode","setCorrectionMode","msg","setMsg","ReactEditor","wrap","src","profilePicture","alt","paddingLeft","facebookName","image","marginRight","clientCorrected","PostList","posts","Container","_id","postProps","Fragment","key","ClientView","useParams","useQuery","isLoading","error","Loader"],"mappings":"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","file":"static/js/11.93b5fba3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { AwesomeIcon } from '../Icons/Icon';\r\nimport { askClipboardPermissions } from './helper';\r\n\r\nexport const CopyToClipboard = ({ value, ...props }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const saveToClipboard = async (e) => {\r\n    e.stopPropagation();\r\n    await askClipboardPermissions();\r\n    try {\r\n      await navigator.clipboard.writeText(value);\r\n      setCopied(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (copied)\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 1000);\r\n  }, [copied]);\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      color=\"primary\"\r\n      onClick={saveToClipboard}\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      style={{ padding: '8px 16px' }}\r\n      endIcon={<AwesomeIcon icon=\"copy\" style={{ marginLeft: '8px' }} />}\r\n    >\r\n      {copied ? 'Copied' : 'Copy'}\r\n    </Button>\r\n  );\r\n};\r\n","export const askClipboardPermissions = async () => {\r\n  try {\r\n    const { state } = await navigator.permissions.query({\r\n      name: 'clipboard-write',\r\n    });\r\n    return state === 'granted';\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const MessageBox = ({\r\n  text,\r\n  toggle,\r\n  severity = 'error',\r\n  autoHideDuration = 30000,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!text) return;\r\n    setOpen(true);\r\n    // eslint-disable-next-line\r\n  }, [toggle]);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {text}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const postClientLink = (data) =>\r\n  axios.post(`/client-link`, data).then(({ data }) => data);\r\nexport const getLinkById = (id) =>\r\n  axios.get(`/client-link/${id}`).then(({ data }) => data);\r\n","import React, { useState } from 'react';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport data from 'emoji-mart/data/facebook.json';\r\nimport { NimblePicker } from 'emoji-mart';\r\nimport { Avatar, Box, Grow, makeStyles } from '@material-ui/core';\r\nimport { AwesomeIcon } from '../Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    overflow: 'visible',\r\n  },\r\n  picker: ({ open }) => ({\r\n    top: '100%',\r\n    position: 'absolute',\r\n    opacity: open ? 1 : 0,\r\n    visibility: open ? 'visible' : 'hidden',\r\n\r\n    '& .emoji-mart': {\r\n      boxShadow:\r\n        '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)!important',\r\n      border: 'none',\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .emoji-mart-anchor': {\r\n      cursor: 'pointer',\r\n    },\r\n  }),\r\n}));\r\n\r\nexport const EmojiePicker = ({ onSelect, className, ...props }) => {\r\n  const [open, setOpen] = useState();\r\n  const classes = useStyles({ open });\r\n\r\n  return (\r\n    <>\r\n      <Avatar\r\n        {...props}\r\n        className={classes.avatar + ' ' + className}\r\n        variant=\"rounded\"\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        <AwesomeIcon icon=\"smile\" />\r\n      </Avatar>\r\n      <Box className={classes.picker}>\r\n        <Grow in={open} style={{ transformOrigin: '0 0 0' }}>\r\n          <NimblePicker\r\n            notFoundEmoji=\"sob\"\r\n            title=\"Emojies\"\r\n            set=\"facebook\"\r\n            data={data}\r\n            onSelect={(emoji) => {\r\n              onSelect(emoji.native);\r\n              setOpen(false);\r\n            }}\r\n            // onClick={(emoji) => {\r\n            //   console.log(emoji);\r\n            //   onSelect(emoji.native);\r\n            //   setOpen(false);\r\n            // }}\r\n          />\r\n        </Grow>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  Grid,\r\n  makeStyles,\r\n  styled,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport { Editable, Slate } from 'slate-react';\r\n\r\nimport { EmojiePicker } from './EmojiPicker';\r\nimport { CopyToClipboard } from './CopyToClipboard';\r\n\r\nconst EDITABLE = styled(Editable)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: '100%',\r\n      overflow: 'visible',\r\n      '& .MuiAvatar-root.tool': {\r\n        // marginRight: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        transition: '0.3s',\r\n\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n      },\r\n\r\n      '& .emoji-picker': {\r\n        cursor: 'pointer',\r\n      },\r\n\r\n      '::spelling-error': {\r\n        color: 'red',\r\n      },\r\n\r\n      '& .editor': {\r\n        flexGrow: 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n      zIndex: 20,\r\n      backgroundColor: theme.palette.grey[100],\r\n      width: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nexport const Editor = ({\r\n  onChange,\r\n  toolbar,\r\n  children,\r\n  serializedValue,\r\n  value,\r\n  editor,\r\n  style = null,\r\n  disabled = false,\r\n}) => {\r\n  // const socket = useSocket();\r\n  // const editor = useMemo(() => withHistory(withReact(createEditor())), []);\r\n  const classes = useStyles();\r\n  const selection = useRef({\r\n    focus: { offset: 0, path: [0, 0] },\r\n    anchor: { offset: 0, path: [0, 0] },\r\n  });\r\n\r\n  // const renderLeaf = useCallback((props) => <Leaf {...props} />, [decorate]);\r\n\r\n  // const handleChange = (newValue) => {\r\n  //   const { operations, selection } = editor;\r\n  //   console.log(operations);\r\n  //   // console.log(editor.selection);\r\n  //   if (!operations[0].server) onChange({ operations, selection });\r\n  //   setValue(newValue);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   socket.on('editor change', ({ id: sId, operations, selection }) => {\r\n  //     if (id !== sId) return;\r\n\r\n  //     operations.forEach((operation) => {\r\n  //       console.log(operation);\r\n  //       editor.apply({ ...operation, server: true });\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <Card className={classes.root} style={style}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"stretch\"\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Slate editor={editor} value={value} onChange={onChange}>\r\n          <EDITABLE\r\n            readOnly={disabled}\r\n            spellCheck={true}\r\n            className=\"editor\"\r\n            placeholder=\"Beginn typing !!\"\r\n            onBlur={() => (selection.current = editor.selection)}\r\n            // renderLeaf={renderLeaf}\r\n            // decorate={decorate}\r\n          />\r\n        </Slate>\r\n\r\n        {toolbar ? (\r\n          <Toolbar className={classes.toolbar} variant=\"dense\" p={1}>\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n              <Grid item sm={4}>\r\n                <Grid container justify=\"flex-start\">\r\n                  <EmojiePicker\r\n                    className=\"emoji-picker tool\"\r\n                    onSelect={(text) => {\r\n                      if (!editor.selection) {\r\n                        editor.selection = selection.current;\r\n                      }\r\n                      editor.insertText(text);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item sm={8}>\r\n                <Grid container justify=\"flex-end\">\r\n                  {children}\r\n                  <CopyToClipboard value={serializedValue} />\r\n                  <Tooltip title=\"character count\" placement=\"bottom\">\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      color=\"primary\"\r\n                      className=\"tool\"\r\n                      style={{ marginLeft: '8px' }}\r\n                    >\r\n                      <Typography>{serializedValue.length}</Typography>\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        ) : null}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nEditor.defaultProps = {\r\n  toolbar: true,\r\n  // onChange: () => {},\r\n  // decorate: () => {},\r\n};\r\n\r\n// const Leaf = ({ attributes, children, leaf }) => {\r\n//   return (\r\n//     <span\r\n//       {...attributes}\r\n//       style={{\r\n//         position: 'relative',\r\n//         backgroundColor: leaf.alphaColor,\r\n//       }}\r\n//     >\r\n//       {leaf.isCaret ? <Caret {...leaf} /> : null}\r\n//       {children}\r\n//     </span>\r\n//   );\r\n// };\r\n","import React, { useRef, useMemo, useState, useEffect } from 'react';\r\nimport { createEditor, Node } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport { withReact } from 'slate-react';\r\nimport { Editor } from '../Editor';\r\n\r\nconst defaultValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text: '',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst serialize = (nodes) => {\r\n  return nodes.map((n) => Node.string(n)).join('\\n');\r\n};\r\n\r\nconst deserialize = (string) => {\r\n  // Return a value array of children derived by splitting the string.\r\n  return string.split('\\n').map((line) => {\r\n    return {\r\n      children: [{ text: line }],\r\n    };\r\n  });\r\n};\r\n\r\nexport const EditorClient = ({\r\n  id,\r\n  content = null,\r\n  editorRef,\r\n  children,\r\n  onSave = () => {},\r\n  editorProps = {},\r\n  disabled = false,\r\n  saveDelay = 1000,\r\n}) => {\r\n  const [value, setValue] = useState(content ? deserialize(content) : defaultValue);\r\n  const saveTimeout = useRef();\r\n\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\r\n  useEffect(() => {\r\n    if (!editorRef) return;\r\n    editorRef.current = editor;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!content) return setValue(defaultValue);\r\n    setValue(deserialize(content));\r\n    // eslint-disable-next-line\r\n  }, [content]);\r\n\r\n  const serialized = serialize(value);\r\n  return (\r\n    <Editor\r\n      {...editorProps}\r\n      editor={editor}\r\n      value={value}\r\n      disabled={disabled}\r\n      serializedValue={serialized}\r\n      onChange={(value) => {\r\n        clearTimeout(saveTimeout.current);\r\n        saveTimeout.current = setTimeout(() => {\r\n          console.log('save');\r\n          onSave({ value, serializedValue: serialize(value) });\r\n        }, saveDelay);\r\n        setValue(value);\r\n      }}\r\n    >\r\n      {children}\r\n    </Editor>\r\n  );\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSocket } from 'services/socket-provider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonProgress: {\r\n    color: theme.palette.success.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport const ChangeImageButton = ({ id, onSave = () => {}, ...props }) => {\r\n  const classes = useStyles();\r\n  const socket = useSocket();\r\n  const [open, setOpen] = useState(false);\r\n  const [text, setText] = useState();\r\n  const [loading, setLoading] = useState();\r\n\r\n  const handleSubmit = () => {\r\n    if (!text) return;\r\n    setLoading(true);\r\n    socket.emit('client change', { id, imageChanges: { text } }, (e) => {\r\n      setText('');\r\n      handleClose();\r\n      onSave();\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Button {...props} onClick={handleOpen}>\r\n        {props.children}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Bild Korrekturen</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Bitte beschreiben Sie Ihre Änderungswünsche zur Abbildung im unten\r\n            angezeigten Textfeld.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            label=\"Änderungswünsche\"\r\n            multiline\r\n            rows={3}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            focused\r\n            autoFocus\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Abbrechen</Button>\r\n          <Button\r\n            disabled={loading || !text}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Speichern\r\n            {loading ? (\r\n              <CircularProgress className={classes.buttonProgress} size={24} />\r\n            ) : null}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useQueryCache } from 'react-query';\r\nimport { useSocket } from 'services/socket-provider';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: ({ success }) =>\r\n    success\r\n      ? {\r\n          backgroundColor: theme.palette.success.main,\r\n          '&:hover': {\r\n            backgroundColor: theme.palette.success.dark,\r\n          },\r\n        }\r\n      : null,\r\n  buttonProgress: {\r\n    color: theme.palette.primary.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n    // background: theme.palette.action.disabled,\r\n  },\r\n}));\r\n\r\nexport const FreigebenBtn = ({ approved, id, QUERY }) => {\r\n  const cache = useQueryCache();\r\n  const socket = useSocket();\r\n  const [loading, setLoading] = useState();\r\n  const classes = useStyles({ success: approved });\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [approved]);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        startIcon={<AwesomeIcon icon=\"check-circle\" />}\r\n        disabled={loading}\r\n        onClick={() => {\r\n          setLoading(true);\r\n          socket.emit(\r\n            'client change',\r\n            {\r\n              id,\r\n              approved: !approved,\r\n            },\r\n            (e) => {\r\n              // setLoading(false);\r\n              cache.invalidateQueries(QUERY);\r\n            }\r\n          );\r\n        }}\r\n      >\r\n        {approved ? 'Freigegeben' : 'Freigeben'}\r\n        {loading ? (\r\n          <CircularProgress className={classes.buttonProgress} size={24} />\r\n        ) : null}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  styled,\r\n  Grid,\r\n  makeStyles,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport dayjs from 'dayjs';\r\nimport { AwesomeIcon } from 'ui/components/Icons/Icon';\r\nimport { EditorClient } from 'ui/components/EditorClient';\r\nimport { useSocket } from 'services/socket-provider';\r\nimport { ReactEditor } from 'slate-react';\r\nimport { MessageBox } from 'pages/Posts/MessageBox';\r\nimport { ChangeImageButton } from '../ChangeImageBtn';\r\nimport { useQueryCache } from 'react-query';\r\nimport { FreigebenBtn } from '../FreigebenBtn';\r\n\r\nconst FB_CARD = styled(Card)({\r\n  borderRadius: 'max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px',\r\n  margin: '0 8px 16px',\r\n  fontFamily: 'Helvetica',\r\n  boxShadow: '0 1px 2px rgba(0,0,0,0.2)',\r\n  fontSize: '16px',\r\n  '-webkitFontSmoothing': 'antialiased',\r\n  maxWidth: '500px',\r\n});\r\nconst FB_CARD_CONTENT = styled(CardContent)({\r\n  padding: '12px 16px 12px',\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: '.9375em',\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    lineHeight: 1.3333,\r\n  },\r\n  date: {\r\n    lineHeight: 1.2308,\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    fontSize: '.8125em',\r\n    color: '#65676b',\r\n  },\r\n  text: {\r\n    fontFamily: 'Segoe UI, Helvetica, Arial, sans-serif',\r\n    fontSize: '.9375em',\r\n    lineHeight: 1.34,\r\n    whiteSpace: 'pre-wrap',\r\n    wordBreak: 'break-word',\r\n    fontWeight: 400,\r\n    color: '#050505',\r\n    unicodeBidi: '-webkit-isolate',\r\n  },\r\n  asset: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport const FacebookPost = ({\r\n  QUERY,\r\n  date,\r\n  approved,\r\n  asset,\r\n  id,\r\n  content,\r\n  client,\r\n}) => {\r\n  const classes = useStyles();\r\n  const editor = useRef();\r\n  const socket = useSocket();\r\n  const dateFormatted = useMemo(() => dayjs(date).format('D. MMMM'), [date]);\r\n  const [clientText, setClientText] = useState(null);\r\n  const [correctionMode, setCorrectionMode] = useState(false);\r\n  const [msg, setMsg] = useState({ toggle: false, text: '' });\r\n\r\n  // focus Edtior\r\n  useEffect(() => {\r\n    if (!editor.current || !correctionMode) return;\r\n    ReactEditor.focus(editor.current);\r\n  }, [correctionMode]);\r\n\r\n  return (\r\n    <FB_CARD>\r\n      <FB_CARD_CONTENT>\r\n        <Grid container wrap=\"nowrap\">\r\n          <Avatar src={client.profilePicture} alt=\"\" />\r\n          <div style={{ flexGrow: 1, paddingLeft: '6px', marginBottom: '8px' }}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {client.facebookName}\r\n            </Typography>\r\n            <Typography className={classes.date} variant=\"caption\">\r\n              {dateFormatted} · <AwesomeIcon icon=\"globe-americas\" />\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </FB_CARD_CONTENT>\r\n      <div variant=\"div\" className={classes.text}>\r\n        <EditorClient\r\n          editorRef={editor}\r\n          disabled={!correctionMode}\r\n          content={content}\r\n          saveDelay={300}\r\n          editorProps={{\r\n            toolbar: false,\r\n            style: { margin: '-28px -4px -8px', boxShadow: 'none' },\r\n          }}\r\n          onSave={({ serializedValue }) => {\r\n            setClientText(serializedValue);\r\n          }}\r\n          id={id}\r\n        />\r\n      </div>\r\n      {asset.image ? (\r\n        <img className={classes.asset} src={asset.path} />\r\n      ) : (\r\n        <video className={classes.asset} src={asset.path}></video>\r\n      )}\r\n      <FB_CARD_CONTENT>\r\n        <Grid container justify=\"space-between\">\r\n          <FreigebenBtn approved={approved} id={id} QUERY={QUERY}></FreigebenBtn>\r\n          <Grid item>\r\n            <ChangeImageButton\r\n              id={id}\r\n              style={{ marginRight: '8px' }}\r\n              color=\"primary\"\r\n              onSave={() => {\r\n                setMsg({\r\n                  toggle: !msg.toggle,\r\n                  text: 'Bild Korrektur wurde gespeichert!',\r\n                  severity: 'success',\r\n                });\r\n              }}\r\n            >\r\n              Bild Korrekturen\r\n            </ChangeImageButton>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={\r\n                <AwesomeIcon\r\n                  style={{ fontSize: '100%' }}\r\n                  icon={correctionMode ? 'check-circle' : 'pen'}\r\n                />\r\n              }\r\n              disabled={correctionMode && !clientText}\r\n              onClick={() => {\r\n                if (correctionMode && clientText) {\r\n                  socket.emit('client change', {\r\n                    id,\r\n                    content: clientText,\r\n                    clientCorrected: true,\r\n                  });\r\n                  setMsg({\r\n                    toggle: !msg.toggle,\r\n                    text: 'Korrektur wurde gespeichert!',\r\n                    severity: 'success',\r\n                  });\r\n\r\n                  setClientText(null);\r\n                }\r\n                setCorrectionMode(!correctionMode);\r\n              }}\r\n            >\r\n              {correctionMode ? 'Speichern' : 'Korrigieren'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </FB_CARD_CONTENT>\r\n      <MessageBox autoHideDuration={15000} {...msg} />\r\n    </FB_CARD>\r\n  );\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'ui/components/Loader';\r\nimport { getLinkById } from 'services/client-link-api';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport { FacebookPost } from './FacebookPost';\r\n\r\nconst ClientView = () => {\r\n  const { id } = useParams();\r\n  const QUERY = useMemo(() => ['client-link', { id }], [id]);\r\n  const { isLoading, error, data } = useQuery(QUERY, () => getLinkById(id));\r\n\r\n  return (\r\n    <>\r\n      <Loader loading={isLoading} />\r\n      {!data ? null : (\r\n        <PostList QUERY={QUERY} client={data.client} posts={data.posts} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostList = ({ posts, client, QUERY }) => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid container justify=\"center\">\r\n        {posts.map(({ _id, ...postProps }) => (\r\n          <React.Fragment key={_id}>\r\n            <FacebookPost\r\n              {...postProps}\r\n              QUERY={QUERY}\r\n              id={_id}\r\n              client={client}\r\n            ></FacebookPost>\r\n            <br />\r\n          </React.Fragment>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientView;\r\n"],"sourceRoot":""}